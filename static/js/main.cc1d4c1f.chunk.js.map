{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","role","type","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","Textform","useState","text","settext","style","color","heading","value","rows","onChange","event","target","backgroundColor","newtext","toUpperCase","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","App","look","setlook","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc1d4c1f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n             <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { a } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"\\navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n       <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>\r\n      </ul>\r\n           <div className={`form-check form-switch text-${props.mode===\"light\"?\"black\":\"light\"}`}>\r\n             <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"customSwitch1\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"customSwitch1\">Dark Mode</label>\r\n            </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.propTypes={title: PropTypes.string.isRequired}\r\nNavbar.defaultProps={\r\n    title: \"set title here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick=(value)=>\r\n    {\r\n        const newtext=text.toUpperCase()\r\n       settext(newtext)\r\n    }\r\n    const handleLoClick=(value)=>\r\n    {\r\n        const newtext=text.toLowerCase()\r\n       settext(newtext)\r\n    }\r\n    const handleClear=()=>\r\n    {\r\n       const newtext=\"\"\r\n       settext(newtext)\r\n    }\r\n    const onchange=(event)=>\r\n    { \r\n      settext(event.target.value)\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"mytext\")\r\n       text.select();\r\n       text.setSelectionRange(0,9999);\r\n       navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleextraspaces=()=>{\r\n        let newtext=text.split(/[ ]+/);\r\n        settext(newtext.join(\" \"))\r\n    }\r\n\r\n    const[text,settext]=useState(\"Enter Text Here\");\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\">\r\n          <div className=\"mb-3\">\r\n           <h1><label htmlFor=\"mytext\" style={{color:props.mode===\"light\"?\"black\":\"white\"}}>{props.heading}</label></h1>\r\n            <textarea className=\"form-control\" value={text} id=\"mytext\" rows=\"7\" onChange={onchange} style={{backgroundColor:props.mode===\"light\"?\"white\":\"grey\",color:props.mode===\"light\"?\"black\":\"white\"}}></textarea>\r\n         </div>\r\n         <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n         <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handleClear}>Clear Text</button>\r\n         <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n         <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n         <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handleextraspaces}>Remove Extra Spaces</button>\r\n\r\n       </div>\r\n       <div className=\"container my-2\" style={{color:props.mode===\"light\"?\"black\":\"white\"}}>\r\n           <h1>Your Text Summary</h1>\r\n           <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n           <p>It Takes {0.008 * text.split(\" \").length} Minutes To Read</p>\r\n           <h2>Preview Of Your Text</h2>\r\n           <p>{text}</p>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\nimport React, { useState } from 'react'\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n}from \"react-router-dom\";*/\n\nfunction App() {\n  const [look,setlook]=useState(\"light\");\n  const [alert,setAlert] =useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },900);\n  }\n  \n  const toggleMode = ()=>{\n    if(look===\"light\")\n    {\n      setlook(\"dark\");\n      document.body.style.backgroundColor=\"grey\";\n      showAlert(\"Dark Mode Enabled\",\"success\");\n    }\n    else{\n      setlook(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Dark Mode Disabled\",\"success\");\n    }\n  }\n  \n  return (\n    <>\n    \n    <Navbar title=\"TextUtiles\" mode={look} toggleMode={toggleMode}></Navbar>\n    <Alert alert={alert}></Alert>\n     <div className='container my-3'>\n            <Textform heading=\"Enter Text Here\" mode={look}></Textform>\n     </div>\n     </>\n    \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}